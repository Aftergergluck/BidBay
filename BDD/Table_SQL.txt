--------------------------------------------------------------
--        Script MySQL.
--------------------------------------------------------------


--------------------------------------------------------------
-- Table Utilisateur
--------------------------------------------------------------

CREATE TABLE Utilisateur(
        mailUtilisateur   Varchar (128) NOT NULL ,  --Taille max adresse mail 254 CHAR --> 128 juste milieu
        mdp               Varchar (32) NOT NULL , 
        nom               Varchar (32) NOT NULL ,
        prenom            Varchar (32) NOT NULL ,
        typeUser          Varchar (16) NOT NULL ,  --User/Admin pas besoin de 32 CHAR
        --imageUser         Varchar (32) NOT NULL ,   Stockées en local, nom de l'image = mailUtilisateur 
        adresseUser       Varchar (254) NOT NULL ,  --Parce 32 CHAR pour une adresse c'est pas sympa  
        telephone         Int NOT NULL ,
        dateNaissanceUser Date NOT NULL ,
	dateInscription	  Timestamp NOT NULL ,
	--nbObjVendu	  Int DEFAULT 0,  Pas nécessaire, en croisant Objet.mailvendeur et mailUtilisateur 
	--nbObjAch	  Int DEFAULT 0,  idem
        PRIMARY KEY (mailUtilisateur ) ,
	--CHECK (nbObjVendu >= 0) ,
	--CHECK (nbObjAch >= 0)
);


--------------------------------------------------------------
-- Table Objet
--------------------------------------------------------------

CREATE TABLE Objet(
        idObjet           Int NOT NULL ,
        
        prixInit          Float NOT NULL ,
        nomObj            Varchar (32) NOT NULL ,
        decriptionObj     Varchar (32) NOT NULL ,
        --imageObj          Varchar (32) NOT NULL ,   Pareil que pour Utilisateur
        pasObjet          Float NOT NULL DEFAULT 1,
        quantiteObj       Int NOT NULL,
        dateDebutVente    Timestamp NOT NULL,
        dateLimiteVente   Timestamp NOT NULL,
        idCategorie       Int NOT NULL,
        mailVendeur       Varchar (128) NOT NULL ,
        mailAcheteur      Varchar (128) NOT NULL ,
	datePaiement	  Timestamp ,
        PRIMARY KEY (IdObjet ) ,
	CHECK (prix > 0) ,
	CHECK (pasobjet > 0.5) ,
	CHECK (dateDebutVente < dateLimiteVente)
);


--------------------------------------------------------------
-- Table Categorie
--------------------------------------------------------------

CREATE TABLE Categorie(
        idCategorie   Int NOT NULL ,
        typeCategorie Varchar (32) NOT NULL ,
        PRIMARY KEY (idCategorie )
);


--------------------------------------------------------------
-- Table encherir
--------------------------------------------------------------

CREATE TABLE encherir(
        dateEnchere     Date ,
        SommeUser       Int ,
        mailUtilisateur Varchar (32) NOT NULL ,
        IdObjet         Int NOT NULL ,
        PRIMARY KEY (mailUtilisateur ,IdObjet )
);


--------------------------------------------------------------
-- Table note
--------------------------------------------------------------

CREATE TABLE note(
        noteFiabilite     Float NOT NULL ,
        noteComm          Float NOT NULL ,
        noteDelai         Float NOT NULL ,
        dateNoteUser      Timestamp NOT NULL ,
        mailUtilisateur   Varchar (32) NOT NULL ,
        mailutilisateuracheteur Varchar (32) NOT NULL ,
        IdObjet           Int NOT NULL ,
        PRIMARY KEY (mailUtilisateur ,mailUtilisateuracheteur ,IdObjet ) ,
	CHECK (noteFiabilite > 0) ,
	CHECK (noteComm > 0) ,
	CHECK (noteDelai > 0)
);

ALTER TABLE Objet ADD CONSTRAINT FK_Objet_idCategorie FOREIGN KEY (idCategorie) REFERENCES Categorie(idCategorie);
ALTER TABLE Objet ADD CONSTRAINT FK_Objet_mailUtilisateur FOREIGN KEY (mailUtilisateur) REFERENCES Utilisateur(mailUtilisateur);
ALTER TABLE Objet ADD CONSTRAINT FK_Objet_mailutilisateuracheteur FOREIGN KEY (mailutilisateuracheteur) REFERENCES Utilisateur(mailUtilisateur);
ALTER TABLE encherir ADD CONSTRAINT FK_encherir_mailUtilisateur FOREIGN KEY (mailUtilisateur) REFERENCES Utilisateur(mailUtilisateur);
ALTER TABLE encherir ADD CONSTRAINT FK_encherir_IdObjet FOREIGN KEY (IdObjet) REFERENCES Objet(IdObjet);
ALTER TABLE note ADD CONSTRAINT FK_note_mailUtilisateur FOREIGN KEY (mailUtilisateur) REFERENCES Utilisateur(mailUtilisateur);
ALTER TABLE note ADD CONSTRAINT FK_note_mailutilisateuracheteur FOREIGN KEY (mailutilisateuracheteur) REFERENCES Utilisateur(mailUtilisateur);
ALTER TABLE note ADD CONSTRAINT FK_note_IdObjet FOREIGN KEY (IdObjet) REFERENCES Objet(IdObjet);


---------------------------------
-- Insertion des valeurs de test
---------------------------------

INSERT INTO utilisateur VALUES ('jean@test.com','mdp1','Dupont','Jean','u','default','1 rue du test','0123456789','1/1/1990',CURRENT_TIMESTAMP,0,5);
INSERT INTO utilisateur VALUES ('paul@test.com','mdp2','Dupont','Paul','u','default','2 rue du test','0987654321','1/1/1991',CURRENT_TIMESTAMP,1,4);
INSERT INTO utilisateur VALUES ('pierre@test.com','mdp3','Dupond','Pierre','u','default','3 rue du test','1470258369','1/1/1992',CURRENT_TIMESTAMP,2,3);
INSERT INTO utilisateur VALUES ('michel@test.fr','mdp','Duponthe','Michel','u','default','10 rue du test','0000000000','1/1/1993',CURRENT_TIMESTAMP,3,2);
INSERT INTO utilisateur VALUES ('florian@test.fr','mdp4','Duponde','Florian','u','default','89 rue du ru','0248617930','1/1/1994',CURRENT_TIMESTAMP,4,1);

INSERT INTO objet VALUES (1,1,'Pomme','un lot de pommes','default',0.5,10,'2015-10-05 04:05:06','2015-10-06 04:05:06',1,'jean@test.com','paul@test.com',NULL);
INSERT INTO objet VALUES (2,1.5,'Poire','une poire','default',1,1,'2015-10-05 04:05:06','2015-10-06 04:05:06',1,'jean@test.com','paul@test.com',NULL);
INSERT INTO objet VALUES (3,2,'Cuillère','une cuillère','default',1.5,1,'2015-10-05 04:05:06','2015-10-06 04:05:06',1,,'jean@test.com','paul@test.com',NULL);
INSERT INTO objet VALUES (4,2.5,'chaussette','une paire de chaussettes','default',5,1,'2015-10-05 04:05:06','2015-10-06 04:05:06',1,,'jean@test.com','paul@test.com',NULL);
INSERT INTO objet VALUES (5,3,'gomme','une gomme','default',2.5,1,'2015-10-05 04:05:06','2015-10-06 04:05:06',1,,'jean@test.com','paul@test.com',NULL);


---------------------------------
-- Requêtes de test
---------------------------------

-- 1/ Tous les utilisateurs inscrits
SELECT * FROM utilisateur;

-- 2/ Tous les utilisateurs inscrits depuis 3 jours
-- 

-- 3/ Utilisateur ayant vendus le plus d'objets


-- 4/ Données de l'utilisateur ayant pour nom "Michel"
SELECT *
FROM utilisateur
WHERE nom = 'Michel';

-- 5/ SAvoir quelle note un utilisateur a donner a un autre utilisateur
SELECT notefiabilite, notecomm, notedelai
FROM note
WHERE mailutilisateur = 'user1' AND mailutilisateuracheteur = 'user2';

-- 6/ Dernière vente terminée



-- 7/ La vente qui va se terminer le plus rapidement dans le temps



-- 8/ Les 3 derniers objets vendus


-- 9/ L'utilisateur ayant acheté le plus d'objet
-- cf point 3

-- 10/ Les utilisateurs ayant enchéris sur la vente "Pomme"


-- 11/ Derniers utilisateur inscrit


-- 12/ Note globale d'un utilisateur
SELECT * 
FROM note n, utilisateur u
WHERE u.mailutilisateur = n.mailutilisateuracheteur;
-- puis calcul moyenne a partir des différentes ligne de la réponse

-- 13/ Nombre d'objet dans une catégorie
SELECT cat.nom, count(idobjet)
FROM objet o, categorie cat
GROUP BY o.idcategorie;

-- 14/ Nombre de catégories
SELECT count(idcategorie)
FROM categorie;

-- 15/ Vente de l'utilisateur "Michel@test.com" en cours
SELECT o.*
FROM object o, utilisateur u
WHERE o.mailutilisateur = u.mailutilisateur
AND u.mailutilisateur = 'michel@test.com'
AND (o.datelimitevente - CURRENT_TIMESTAMP) > 0;

